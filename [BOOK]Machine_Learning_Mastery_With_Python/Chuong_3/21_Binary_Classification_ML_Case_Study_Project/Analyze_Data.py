# shape
print(dataset.shape) #(208, 61)

# types
set_option('display.max_rows', 500)
print(dataset.dtypes)
# 0 float64
# 1 float64
# 2 float64
# 3 float64
# 4 float64
# 5 float64
# 6 float64
# 7 float64
# 8 float64
# 9 float64
# 10 float64
# ...
# 49 float64
# 50 float64
# 51 float64
# 52 float64
# 53 float64
# 54 float64
# 55 float64
# 56 float64
# 57 float64
# 58 float64
# 59 float64
# 60 object

# head
set_option('display.width', 100)
print(dataset.head(20))
#     0       1      2     3       4      5     6       7      8      9   ...    51 \
# 0 0.0200 0.0371 0.0428 0.0207 0.0954 0.0986 0.1539 0.1601 0.3109 0.2111 ... 0.0027
# 1 0.0453 0.0523 0.0843 0.0689 0.1183 0.2583 0.2156 0.3481 0.3337 0.2872 ... 0.0084
# 2 0.0262 0.0582 0.1099 0.1083 0.0974 0.2280 0.2431 0.3771 0.5598 0.6194 ... 0.0232
# 3 0.0100 0.0171 0.0623 0.0205 0.0205 0.0368 0.1098 0.1276 0.0598 0.1264 ... 0.0121
# 4 0.0762 0.0666 0.0481 0.0394 0.0590 0.0649 0.1209 0.2467 0.3564 0.4459 ... 0.0031
# 5 0.0286 0.0453 0.0277 0.0174 0.0384 0.0990 0.1201 0.1833 0.2105 0.3039 ... 0.0045
# 6 0.0317 0.0956 0.1321 0.1408 0.1674 0.1710 0.0731 0.1401 0.2083 0.3513 ... 0.0201
# 7 0.0519 0.0548 0.0842 0.0319 0.1158 0.0922 0.1027 0.0613 0.1465 0.2838 ... 0.0081
# 8 0.0223 0.0375 0.0484 0.0475 0.0647 0.0591 0.0753 0.0098 0.0684 0.1487 ... 0.0145
# 9 0.0164 0.0173 0.0347 0.0070 0.0187 0.0671 0.1056 0.0697 0.0962 0.0251 ... 0.0090
# 10 0.0039 0.0063 0.0152 0.0336 0.0310 0.0284 0.0396 0.0272 0.0323 0.0452 ... 0.0062
# 11 0.0123 0.0309 0.0169 0.0313 0.0358 0.0102 0.0182 0.0579 0.1122 0.0835 ... 0.0133
# 12 0.0079 0.0086 0.0055 0.0250 0.0344 0.0546 0.0528 0.0958 0.1009 0.1240 ... 0.0176
# 13 0.0090 0.0062 0.0253 0.0489 0.1197 0.1589 0.1392 0.0987 0.0955 0.1895 ... 0.0059
# 14 0.0124 0.0433 0.0604 0.0449 0.0597 0.0355 0.0531 0.0343 0.1052 0.2120 ... 0.0083
# 15 0.0298 0.0615 0.0650 0.0921 0.1615 0.2294 0.2176 0.2033 0.1459 0.0852 ... 0.0031
# 16 0.0352 0.0116 0.0191 0.0469 0.0737 0.1185 0.1683 0.1541 0.1466 0.2912 ... 0.0346
# 17 0.0192 0.0607 0.0378 0.0774 0.1388 0.0809 0.0568 0.0219 0.1037 0.1186 ... 0.0331
# 18 0.0270 0.0092 0.0145 0.0278 0.0412 0.0757 0.1026 0.1138 0.0794 0.1520 ... 0.0084
# 19 0.0126 0.0149 0.0641 0.1732 0.2565 0.2559 0.2947 0.4110 0.4983 0.5920 ... 0.0092
#     52     53      54    55      56     57    58     59   60
# 0 0.0065 0.0159 0.0072 0.0167 0.0180 0.0084 0.0090 0.0032 R
# 1 0.0089 0.0048 0.0094 0.0191 0.0140 0.0049 0.0052 0.0044 R
# 2 0.0166 0.0095 0.0180 0.0244 0.0316 0.0164 0.0095 0.0078 R
# 3 0.0036 0.0150 0.0085 0.0073 0.0050 0.0044 0.0040 0.0117 R
# 4 0.0054 0.0105 0.0110 0.0015 0.0072 0.0048 0.0107 0.0094 R
# 5 0.0014 0.0038 0.0013 0.0089 0.0057 0.0027 0.0051 0.0062 R
# 6 0.0248 0.0131 0.0070 0.0138 0.0092 0.0143 0.0036 0.0103 R
# 7 0.0120 0.0045 0.0121 0.0097 0.0085 0.0047 0.0048 0.0053 R
# 8 0.0128 0.0145 0.0058 0.0049 0.0065 0.0093 0.0059 0.0022 R
# 9 0.0223 0.0179 0.0084 0.0068 0.0032 0.0035 0.0056 0.0040 R
# 10 0.0120 0.0052 0.0056 0.0093 0.0042 0.0003 0.0053 0.0036 R
# 11 0.0265 0.0224 0.0074 0.0118 0.0026 0.0092 0.0009 0.0044 R
# 12 0.0127 0.0088 0.0098 0.0019 0.0059 0.0058 0.0059 0.0032 R
# 13 0.0095 0.0194 0.0080 0.0152 0.0158 0.0053 0.0189 0.0102 R
# 14 0.0057 0.0174 0.0188 0.0054 0.0114 0.0196 0.0147 0.0062 R
# 15 0.0153 0.0071 0.0212 0.0076 0.0152 0.0049 0.0200 0.0073 R
# 16 0.0158 0.0154 0.0109 0.0048 0.0095 0.0015 0.0073 0.0067 R
# 17 0.0131 0.0120 0.0108 0.0024 0.0045 0.0037 0.0112 0.0075 R
# 18 0.0010 0.0018 0.0068 0.0039 0.0120 0.0132 0.0070 0.0088 R
# 19 0.0035 0.0098 0.0121 0.0006 0.0181 0.0094 0.0116 0.0063 R

# descriptions, change precision to 3 places
set_option('precision', 3)
print(dataset.describe())
#          0       1         2      3       4       5       6       7       8       9 \
# count 208.000 2.080e+02 208.000 208.000 208.000 208.000 208.000 208.000 208.000 208.000
# mean    0.029 3.844e-02 0.044   0.054   0.075   0.105   0.122   0.135   0.178   0.208
# std     0.023 3.296e-02 0.038   0.047   0.056   0.059   0.062   0.085   0.118   0.134
# min     0.002 6.000e-04 0.002   0.006   0.007   0.010   0.003   0.005   0.007   0.011
# 25%     0.013 1.645e-02 0.019   0.024   0.038   0.067   0.081   0.080   0.097   0.111
# 50%     0.023 3.080e-02 0.034   0.044   0.062   0.092   0.107   0.112   0.152   0.182
# 75%     0.036 4.795e-02 0.058   0.065   0.100   0.134   0.154   0.170   0.233   0.269
# max     0.137 2.339e-01 0.306   0.426   0.401   0.382   0.373   0.459   0.683   0.711
#       ...  50       51       52      53     54        55         56 \
# count ... 208.000 2.080e+02 2.080e+02 208.000 2.080e+02 2.080e+02 2.080e+02
# mean ... 0.016 1.342e-02 1.071e-02 0.011 9.290e-03 8.222e-03 7.820e-03
# std ... 0.012 9.634e-03 7.060e-03 0.007 7.088e-03 5.736e-03 5.785e-03
# min ... 0.000 8.000e-04 5.000e-04 0.001 6.000e-04 4.000e-04 3.000e-04
# 25% ... 0.008 7.275e-03 5.075e-03 0.005 4.150e-03 4.400e-03 3.700e-03
# 50% ... 0.014 1.140e-02 9.550e-03 0.009 7.500e-03 6.850e-03 5.950e-03
# 75% ... 0.021 1.673e-02 1.490e-02 0.015 1.210e-02 1.058e-02 1.043e-02
# max ... 0.100 7.090e-02 3.900e-02 0.035 4.470e-02 3.940e-02 3.550e-02

#           57       58        59
# count 2.080e+02 2.080e+02 2.080e+02
# mean 7.949e-03 7.941e-03 6.507e-03
# std 6.470e-03 6.181e-03 5.031e-03
# min 3.000e-04 1.000e-04 6.000e-04
# 25% 3.600e-03 3.675e-03 3.100e-03
# 50% 5.800e-03 6.400e-03 5.300e-03
# 75% 1.035e-02 1.033e-02 8.525e-03
# max 4.400e-02 3.640e-02 4.390e-02

# class distribution
print(dataset.groupby(60).size())
# M 111
# R 97

# histograms
dataset.hist(sharex=False, sharey=False, xlabelsize=1, ylabelsize=1)
pyplot.show()

# density
dataset.plot(kind='density', subplots=True, layout=(8,8), sharex=False, legend=False,
fontsize=1)
pyplot.show()

# box and whisker plots
dataset.plot(kind='box', subplots=True, layout=(8,8), sharex=False, sharey=False,
fontsize=1)
pyplot.show()

# correlation matrix
fig = pyplot.figure()
ax = fig.add_subplot(111)
cax = ax.matshow(dataset.corr(), vmin=-1, vmax=1, interpolation='none')
fig.colorbar(cax)
pyplot.show()
